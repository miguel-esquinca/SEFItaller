<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABhAKADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8qqKKKACiiigAooqfT7CfVL+2srWPzbm5lWGKPIG52ICjJ4HJ
        HWjbVjinJpJXbIKK+rPAf7PegeG7e3udXRdb1MoGkEw3W8bYOQqH7wwcZfP3QQF6Vl/ED9m2x1qU3fhq
        WHSbk5L2soY28hLA7gRkx8FuACOFAC8k+X/aVDn5b6dz7efB2Zxwv1jlTf8ALfX/ACv5X9LvQ+Z6/Rj9
        mX/gmP4V+JXwZ8PeLfHms+IrDWNci+3w2ekT20cUNo/MBJaOUszpiTOVwJApUFCT3vwD/wCCT/w31jwb
        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
        AFFFFABRRRQAUUUUAf/Z
</value>
  </data>
</root>